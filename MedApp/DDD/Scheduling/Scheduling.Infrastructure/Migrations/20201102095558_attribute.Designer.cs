// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Scheduling.Infrastructure;

namespace Scheduling.Infrastructure.Migrations
{
    [DbContext(typeof(SchedulingContext))]
    [Migration("20201102095558_attribute")]
    partial class attribute
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Scheduling.Domain.Appointments.Appointment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("_calendarId")
                        .HasColumnName("CalendarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("_patientId")
                        .HasColumnName("PatientId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Appoitments","calendars");
                });

            modelBuilder.Entity("Scheduling.Domain.Calendars.Calendar", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("_title")
                        .HasColumnName("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Calendars","calendars");
                });

            modelBuilder.Entity("Scheduling.Domain.Clinics.Clinic", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("_location")
                        .HasColumnName("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_name")
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clinics","calendars");
                });

            modelBuilder.Entity("Scheduling.Domain.MedicalStaff.MedicalStuff", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("_calendarId")
                        .HasColumnName("CalendarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("_clinicId")
                        .HasColumnName("ClinicId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("_dateOfBirth")
                        .HasColumnName("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("_firstname")
                        .HasColumnName("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_lastname")
                        .HasColumnName("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MedicalStuffs","calendars");
                });

            modelBuilder.Entity("Scheduling.Domain.Appointments.Appointment", b =>
                {
                    b.OwnsOne("Scheduling.Domain.Appointments.AppointmentTerm", "_term", b1 =>
                        {
                            b1.Property<Guid>("AppointmentId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime?>("EndAppoitment")
                                .HasColumnName("EndAppoitmentAppoitmentDate")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("StartAppoitment")
                                .HasColumnName("StartAppoitmentDate")
                                .HasColumnType("datetime2");

                            b1.HasKey("AppointmentId");

                            b1.ToTable("Appoitments");

                            b1.WithOwner()
                                .HasForeignKey("AppointmentId");
                        });
                });

            modelBuilder.Entity("Scheduling.Domain.Calendars.Calendar", b =>
                {
                    b.OwnsMany("Scheduling.Domain.CalendarUsers.CalendarUser", "_calendarUsers", b1 =>
                        {
                            b1.Property<Guid>("CalendarId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<Guid?>("MedicalStuffId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("CalendarId", "Id");

                            b1.ToTable("CalendarUsers","calendars");

                            b1.WithOwner()
                                .HasForeignKey("CalendarId");

                            b1.OwnsOne("Scheduling.Domain.MedicalStaff.MedicalStuffRole", "_role", b2 =>
                                {
                                    b2.Property<Guid>("CalendarUserCalendarId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("CalendarUserId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<string>("Value")
                                        .HasColumnName("RoleCode")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("CalendarUserCalendarId", "CalendarUserId");

                                    b2.ToTable("CalendarUsers");

                                    b2.WithOwner()
                                        .HasForeignKey("CalendarUserCalendarId", "CalendarUserId");
                                });
                        });
                });

            modelBuilder.Entity("Scheduling.Domain.MedicalStaff.MedicalStuff", b =>
                {
                    b.OwnsOne("Scheduling.Domain.MedicalStaff.MedicalStuffRole", "_medicalStuffRole", b1 =>
                        {
                            b1.Property<Guid>("MedicalStuffId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .HasColumnName("RoleCode")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("MedicalStuffId");

                            b1.ToTable("MedicalStuffs");

                            b1.WithOwner()
                                .HasForeignKey("MedicalStuffId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
